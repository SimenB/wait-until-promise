{
  "name": "wait-until-promise",
  "version": "0.1.1",
  "description": "A simple utilty to wait until condition is true, returning a promise",
  "main": "index.js",
  "files": [
    "index.js"
  ],
  "scripts": {
    "clean": "rimraf coverage/ .nyc_output/ index.js",
    "compile": "babel waitUntilPromise.js -o index.js",
    "cover": "nyc ava",
    "lint": "eslint waitUntilPromise.js test.js",
    "postcover": "nyc report --reporter=html",
    "posttravis": "nyc check-coverage --lines 100 --functions 100 --branches 100 --stmts 100 ava && nyc report --reporter=lcov",
    "pretravis": "npm run lint",
    "precover": "npm run clean",
    "prelint": "npm run clean",
    "prepublish": "not-in-install && npm run compile || echo this is npm install",
    "pretest": "npm run lint",
    "test": "ava",
    "travis": "npm run cover"
  },
  "repository": "SimenB/wait-until-promise",
  "keywords": [
    "jasmine",
    "wait",
    "promise",
    "waitsfor"
  ],
  "author": "Simen Bekkhus <sbekkhus91@gmail.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/SimenB/wait-until-promise/issues"
  },
  "homepage": "https://github.com/SimenB/wait-until-promise#readme",
  "devDependencies": {
    "ava": "^0.14.0",
    "babel-cli": "^6.6.5",
    "babel-eslint": "^6.0.0-beta.6",
    "babel-plugin-transform-es2015-arrow-functions": "^6.5.2",
    "babel-plugin-transform-es2015-block-scoping": "^6.7.1",
    "babel-plugin-transform-es2015-modules-umd": "^6.6.5",
    "babel-plugin-transform-es2015-parameters": "^6.7.0",
    "babel-plugin-transform-es3-member-expression-literals": "^6.5.0",
    "babel-register": "^6.7.2",
    "codeclimate-test-reporter": "^0.3.1",
    "coveralls": "^2.11.8",
    "eslint": "^2.4.0",
    "eslint-config-standard": "^5.1.0",
    "eslint-plugin-ava": "^1.2.1",
    "eslint-plugin-babel": "^3.1.0",
    "eslint-plugin-promise": "^1.1.0",
    "eslint-plugin-standard": "^1.3.2",
    "in-publish": "^2.0.0",
    "nyc": "^6.1.1",
    "rimraf": "^2.5.2",
    "sinon": "^1.17.3"
  },
  "dependencies": {}
}
